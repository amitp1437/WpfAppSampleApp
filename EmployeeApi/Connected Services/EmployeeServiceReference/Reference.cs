//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmployeeApi.EmployeeServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeDataContract", Namespace="http://schemas.datacontract.org/2004/07/EmployeeService")]
    [System.SerializableAttribute()]
    public partial class EmployeeDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SalaryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Salary {
            get {
                return this.SalaryField;
            }
            set {
                if ((this.SalaryField.Equals(value) != true)) {
                    this.SalaryField = value;
                    this.RaisePropertyChanged("Salary");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmployeeServiceReference.IEmployeeService")]
    public interface IEmployeeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/GetAllEmployee", ReplyAction="http://tempuri.org/IEmployeeService/GetAllEmployeeResponse")]
        EmployeeApi.EmployeeServiceReference.EmployeeDataContract[] GetAllEmployee();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/GetAllEmployee", ReplyAction="http://tempuri.org/IEmployeeService/GetAllEmployeeResponse")]
        System.Threading.Tasks.Task<EmployeeApi.EmployeeServiceReference.EmployeeDataContract[]> GetAllEmployeeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/GetEmployeeByID", ReplyAction="http://tempuri.org/IEmployeeService/GetEmployeeByIDResponse")]
        EmployeeApi.EmployeeServiceReference.EmployeeDataContract GetEmployeeByID(string employeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/GetEmployeeByID", ReplyAction="http://tempuri.org/IEmployeeService/GetEmployeeByIDResponse")]
        System.Threading.Tasks.Task<EmployeeApi.EmployeeServiceReference.EmployeeDataContract> GetEmployeeByIDAsync(string employeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/AddEmployee", ReplyAction="http://tempuri.org/IEmployeeService/AddEmployeeResponse")]
        bool AddEmployee(EmployeeApi.EmployeeServiceReference.EmployeeDataContract employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/AddEmployee", ReplyAction="http://tempuri.org/IEmployeeService/AddEmployeeResponse")]
        System.Threading.Tasks.Task<bool> AddEmployeeAsync(EmployeeApi.EmployeeServiceReference.EmployeeDataContract employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/UpdateEmmployee", ReplyAction="http://tempuri.org/IEmployeeService/UpdateEmmployeeResponse")]
        bool UpdateEmmployee(EmployeeApi.EmployeeServiceReference.EmployeeDataContract employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/UpdateEmmployee", ReplyAction="http://tempuri.org/IEmployeeService/UpdateEmmployeeResponse")]
        System.Threading.Tasks.Task<bool> UpdateEmmployeeAsync(EmployeeApi.EmployeeServiceReference.EmployeeDataContract employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/DeleteEmployee", ReplyAction="http://tempuri.org/IEmployeeService/DeleteEmployeeResponse")]
        bool DeleteEmployee(EmployeeApi.EmployeeServiceReference.EmployeeDataContract employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/DeleteEmployee", ReplyAction="http://tempuri.org/IEmployeeService/DeleteEmployeeResponse")]
        System.Threading.Tasks.Task<bool> DeleteEmployeeAsync(EmployeeApi.EmployeeServiceReference.EmployeeDataContract employee);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmployeeServiceChannel : EmployeeApi.EmployeeServiceReference.IEmployeeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmployeeServiceClient : System.ServiceModel.ClientBase<EmployeeApi.EmployeeServiceReference.IEmployeeService>, EmployeeApi.EmployeeServiceReference.IEmployeeService {
        
        public EmployeeServiceClient() {
        }
        
        public EmployeeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmployeeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public EmployeeApi.EmployeeServiceReference.EmployeeDataContract[] GetAllEmployee() {
            return base.Channel.GetAllEmployee();
        }
        
        public System.Threading.Tasks.Task<EmployeeApi.EmployeeServiceReference.EmployeeDataContract[]> GetAllEmployeeAsync() {
            return base.Channel.GetAllEmployeeAsync();
        }
        
        public EmployeeApi.EmployeeServiceReference.EmployeeDataContract GetEmployeeByID(string employeeID) {
            return base.Channel.GetEmployeeByID(employeeID);
        }
        
        public System.Threading.Tasks.Task<EmployeeApi.EmployeeServiceReference.EmployeeDataContract> GetEmployeeByIDAsync(string employeeID) {
            return base.Channel.GetEmployeeByIDAsync(employeeID);
        }
        
        public bool AddEmployee(EmployeeApi.EmployeeServiceReference.EmployeeDataContract employee) {
            return base.Channel.AddEmployee(employee);
        }
        
        public System.Threading.Tasks.Task<bool> AddEmployeeAsync(EmployeeApi.EmployeeServiceReference.EmployeeDataContract employee) {
            return base.Channel.AddEmployeeAsync(employee);
        }
        
        public bool UpdateEmmployee(EmployeeApi.EmployeeServiceReference.EmployeeDataContract employee) {
            return base.Channel.UpdateEmmployee(employee);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateEmmployeeAsync(EmployeeApi.EmployeeServiceReference.EmployeeDataContract employee) {
            return base.Channel.UpdateEmmployeeAsync(employee);
        }
        
        public bool DeleteEmployee(EmployeeApi.EmployeeServiceReference.EmployeeDataContract employee) {
            return base.Channel.DeleteEmployee(employee);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteEmployeeAsync(EmployeeApi.EmployeeServiceReference.EmployeeDataContract employee) {
            return base.Channel.DeleteEmployeeAsync(employee);
        }
    }
}
